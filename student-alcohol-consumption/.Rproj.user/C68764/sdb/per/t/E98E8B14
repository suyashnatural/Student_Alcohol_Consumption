{
    "collab_server" : "",
    "contents" : "#######################################################################################\n### Project - Impact of Alcohol Consumption on Students\n### DataNiners - Suyash Nande, Abhishesk Deshpande, Baby Saranya Nakka, Himanshu Prihar\n### Date - June 28, 2017\n#######################################################################################\n\n####################################################\n### removing objects and free memory and get report\n####################################################\nrm(list = ls())\ngc()\n\n# installing various packages\ninstall.packages(\"ggplot2\")\ninstall.packages(\"plyr\")\ninstall.packages(\"dplyr\")\ninstall.packages(\"gridExtra\")\ninstall.packages(\"waffle\")\ninstall.packages(\"Hmisc\")\ninstall.packages(\"DMwR\")\ninstall.packages(\"rpart\")\ninstall.packages(\"fpc\")\ninstall.packages(\"rpart\",\"rpart.plot\")\ninstall.packages(\"randomForest\")\ninstall.packages(\"C50\")\ninstall.packages(\"arules\")\ninstall.packages(\"arulesViz\")\ninstall.packages(\"gmodels\")\ninstall.packages(\"plotly\")\n\n\nlibrary(ggplot2)      # for creating complex plot\nlibrary(plyr)         # for creating split-apply-combine procedures\nlibrary(dplyr)        # for data manipulation\nlibrary(gridExtra)    # for working with grid graphics\nlibrary(waffle)       # for square pie charts on categirical variables\nlibrary(Hmisc)        # for high level graphics\nlibrary(DMwR)         # Function in this package- abind, class, lattice, quantmod, ROCR, rpart, xts, zoo4 \nlibrary(rpart)        # implements  recursive partitioning\nlibrary(fpc)          # for clustering\nlibrary(\"rpart\",\"rpart.plot\") # for classification and regression trees\nlibrary(randomForest) # for random forest\nlibrary(C50)          # for C50 algorithm\nlibrary(arules)       # for apriori - association rules mining\nlibrary(arulesViz)    # for visualising association rules\nlibrary(gmodels)      # for model fitting\n\n#########################################################\n### reading and exploring the math class student dataset\n#########################################################\nmaths_students<-read.csv(\"/Users/suyashnande/KDD/ KDD_Project/student-alcohol-consumption/student-mat.csv\",stringsAsFactors = FALSE)\ndim(maths_students)\nnames(maths_students)\nstr(maths_students)\nattributes(maths_students)\n\n###############################################################\n### reading and exploring the portuguese class student dataset\n###############################################################\nportuguese_students<-read.csv(\"/Users/suyashnande/KDD/ KDD_Project/student-alcohol-consumption/student-por.csv\",stringsAsFactors = FALSE)\ndim(portuguese_students)\nnames(portuguese_students)\nstr(portuguese_students)\nattributes(portuguese_students)\n\n###############################################################\n### merging the datasets and removing any duplicate values\n###############################################################\nstudents <- rbind(maths_students, portuguese_students)\nView(students)\nduplicated(students) # No duplicate values\n\n###############################################################\n### handling missing values in dataset, if any\n### imputation of missing values\n###############################################################\nsapply(students, function(x) sum(is.na(x))) # No missing values\n\n###############################################################\n### Outliers Detection\n###############################################################\n\n# Outlier for Age variable\noutlier_age <- boxplot.stats(students$age)$out\nboxplot(students$age, main=\"Students Age\", boxwex=0.1)\nmtext(paste(\"Outliers: \", paste(outlier_age, collapse=\", \")), cex=0.6)\ncount(outlier_age)\n\nx <- students$age\nnormalize <- (x-min(x))/(max(x)-min(x))\nhist(students$age, breaks=10, xlab=\"Age\", col=\"lightblue\", main=\"\")\nhist(normalize, breaks=10, xlab=\"Normalized Age\", col=\"lightblue\", main=\"\")\n\n# Outlier for Absences variable\noutlier_absences <- boxplot.stats(students$absences)$out\nboxplot(students$absences, main=\"Students Absences\", boxwex=0.1)\nmtext(paste(\"Outliers: \", paste(outlier_absences, collapse=\", \")), cex=0.6)\ncount(outlier_absences)\n\n###############################################################\n### Patterns and trends - Frequency Distribution\n###############################################################\n\n# plots based on Gender\nggplot(students, aes(sex)) + geom_bar(aes(fill = as.factor(students$sex))) +\n  scale_fill_discrete(name = \"Sex\" ,labels = c(\"Female \" , \"Male\")) +\n  labs(x= \"Sex of Students\",y= \"Number of Students\" , title = \"Sex of Students\")\n# Observation - Here we can see that number of females are greater than number of males in our dataset.\n\n# plots based on Address\nggplot(students, aes(address)) + geom_bar(aes(fill = as.factor(students$address))) +\n  scale_fill_discrete(name = \"Address\", labels = c(\"Rural\",\"Urban\")) +\n  labs(x = \"Address\" , y = \"Number of Students\" , title = \"Address of Students\")\n# Observation - Here we can see that urban population is greater than rural population.\n\n\n# plots based on Parents staying together or apart\nggplot(students, aes(famsize)) + geom_bar(aes(fill = as.factor(students$Pstatus))) + \n  scale_fill_discrete(name = \"Family Cohabitation Status\" , labels = c(\"Living Apart\", \"Living Together\")) +\n  labs(x = \"Family Cohabitation Status\" , y = \"Number of Students\" , title = \"Family Cohabitation Status\")\n# Observation - Family living together are greater than family living apart.\n\n# plots based on higher education\nggplot(students, aes(higher)) + geom_bar(aes(fill = as.factor(students$higher))) + \n  scale_fill_discrete(name = \"Wants to Take Higher Education\" , labels = c(\"No\",\"Yes\")) +\n  labs(y = \"Number of Students\" , title = \"Students who want to take Higher Education\") + \n  theme(axis.text.x=element_blank(),\n        axis.ticks.x=element_blank())\n# Observation - Students wants to take higher education are higher.\n\n# plots based on Internet\nggplot(students, aes(internet)) + geom_bar(aes(fill = as.factor(students$internet))) + scale_fill_discrete(name = \"Internet Access\" , labels = c(\"No\",\"Yes\")) +\n  labs(x = \"Internet Access\" , y = \"Number of Students\" , title = \"Students who have Internet Access\") + \n  theme(axis.text.x=element_blank(),\n        axis.ticks.x=element_blank())\n# Observation - More number of students have internet connectivity.\n\n\n# plots based on Workday alcohol\nggplot(students, aes(Dalc)) + geom_bar(aes(fill = as.factor(students$Dalc))) + \n  scale_fill_discrete(name = \"Workday Alcohol Consumption\", labels =c(\"Very Low\", \"Low\", \"Medium\", \"High\", \"Very High\")) +\n  labs(x = \"Workday Alcohol Consumption\" , y = \"Number of Students\" , title = \"Graph of Student Workday Alcohol Consumption\") +\n  theme(axis.text.x=element_blank(),\n        axis.ticks.x=element_blank())\n# Observation - During workday, maximum number of students consumes less alcohol.\n\n\n# plots based on Weekend alcohol\nggplot(students, aes(Walc)) + geom_bar(aes(fill = as.factor(students$Walc))) + \n  scale_fill_discrete(name = \"Weekend Alcohol Consumption\", labels =c(\"Very Low\", \"Low\", \"Medium\", \"High\", \"Very High\")) +\n  labs(x = \"Weekend Alcohol Consumption\" , y = \"Number of Students\" , title = \"Graph of Student Weekend Alcohol Consumption\") +\n  theme(axis.text.x=element_blank(),\n        axis.ticks.x=element_blank())\n# Observation - During weekend, maximum number of students consumes less alcohol.\n\n\n# plots based on Absences\nggplot(students, aes(absences)) + geom_histogram(binwidth=1, colour=\"black\", fill=\"green\") +\n  labs(x= \"Number of Absences\",y= \"Number of Students\" , title = \"Plot of Student Absences\")\n# Observation - Number of absences are low as number of students increases.\n\n\n# Daily alcohol consumtption by age\nggplot(aes(x=age),data=students)+geom_histogram()+facet_wrap(~Dalc)\n# Observation - The highest level of workday alcohol consumption is among 17 year olds\n\n\n# Distribution of ages of students on weekday alcohol consumtion\nggplot(students, aes(x=(as.numeric(age))))+ geom_histogram(fill=\"blue\", colour=\"black\",binwidth=1) +\n  facet_grid(Dalc ~ .)+ggtitle(\"Age and Workday Consumption\")\n\n\n# Distribution of ages of students on weekend alcohol consumtion\nggplot(students, aes(x=(as.numeric(age))))+ geom_histogram(fill=\"red\", colour=\"black\",binwidth=1) +\n  facet_grid(Walc ~ .)+ggtitle(\"Age and Weekend Consumption\")\n# Observation - Patterns suggest high consumption of alcohol for any age group are less.\n\n# Distribution of test score (G3) on male and female students\nstu_by_fgrade <- students %>% select(sex,G3)\nstu_count_by_fgrade<-ggplot(test, aes(x=G3)) + geom_histogram(fill=\"blue\", colour=\"black\",binwidth=1) +\n  facet_grid(sex ~ .)+geom_vline(data=aggregate(stu_by_fgrade[2], stu_by_fgrade[1], median), \n                                 mapping=aes(xintercept=G3), color=\"red\")\ngrid.arrange(stu_count_by_fgrade)\n# Observation - Female students have greater mean of test score(G3) than male students.\n\n\n#########################################################################\n### Subsets\n### Subset-1: Does high alcohol consumption affect the health condition?\n#########################################################################\n\nbwplot(students$Dalc~students$G3|students$school,ylab=\"Weekday alcohol\", xlab=\"grades\", \n       main=\"Weekday alcohol consumption levels and grades in period 3 by school\",layout=c(1,3))\n# The median grades become lower as the alcohol consumption increases\n\nstudents$Dalc <- as.numeric(students$Dalc)\nstu_by_dalc <- students[students$Dalc>=4, ]\nnrow(stu_by_dalc)\n\nnrow(filter(stu_by_dalc,health==1 |health==2))\n# Only 8 out of 52 students consumes alcohol have bad health\n\n\n#########################################################################\n### Subsets\n### Subset-2: How many Students with high alcohol consumption have good\n###           family relation?\n#########################################################################\n\nfamily_sub<-subset(stu_by_dalc, famrel==4|famrel==5)\nnrow(family_sub)\n# 38 out of 52 students who have high alcohol consumption\n# maintain good family relationship.\n\n\n#########################################################################\n### Subsets\n### Subset-3: How many Students with high daily alcohol consumption \n###           also has high weekend alcohol consumption?\n#########################################################################\nstu_by_dalc$Walc <- as.numeric(stu_by_dalc$Walc)\nstu_daily_weekly<-stu_by_dalc[stu_by_dalc$Walc>=4, ]\nnrow(stu_daily_weekly)\n# Here, we can observe that 42 out of 52 students who have high\n# weekday consumption also has high weekend consumption levels.\n\n\n\n\n\n###############################################################\n### Pattern Prediction\n### Pattern 1 - Daily alcohol consumption among students\n### Pattern 2 - Weekend alcohol consumption among students\n###############################################################\nstudents$Dalc <- as.factor(students$Dalc)\nstudents$Dalc <- mapvalues(students$Dalc, \n                           from = 1:5, \n                           to = c(\"Very Low\", \"Low\", \"Medium\", \"High\", \"Very High\"))\n\nstudents$Walc <- as.factor(students$Walc)      \nstudents$Walc <- mapvalues(students$Walc, \n                           from = 1:5, \n                           to = c(\"Very Low\", \"Low\", \"Medium\", \"High\", \"Very High\"))\n\nalcohol.d <- as.data.frame(table(students$Dalc))\npar.d <- as.numeric(alcohol.d$Freq)\nnames(par.d) <- alcohol.d$Var1\npar.d <- round(par.d/10)\n\n\n#waffle.col <- c(\"#ff4e50\",\"#fc913a\",\"#f9d62e\",\"#00d27f\",\"#adff00\")\nxyz<-rainbow(5)\n\n\nc1 <- waffle(par.d, rows=5, \n             #use_glyph=\"glass\", \n             size=2, \n             title = \"Workday alcohol consumption among students\",\n             glyph_size=8,\n             xlab=\"1 glass == 10 students\",\n             colors=xyz,\n             legend_pos= \"top\"\n)\n\nalcohol.w <- as.data.frame(table(students$Walc))\npar.w <- as.numeric(alcohol.w$Freq)\nnames(par.w) <- alcohol.w$Var1\npar.w <- round(par.w/10)\n\nc2 <- waffle(par.w, rows=5, \n             #use_glyph=\"glass\", \n             size=2, \n             title = \"Weekend alcohol consumption among students\",\n             glyph_size=8,\n             xlab=\"1 glass == 10 students\",\n             colors=xyz,\n             legend_pos= \"top\"\n)\n\n\n#workday\nc5 <- ggplot(students, aes(x=Dalc, y=G1, fill=Dalc))+\n  geom_point()+\n  theme_bw()+\n  theme(legend.position=\"none\")+\n  scale_fill_manual(values=waffle.col)+\n  xlab(\"Alcohol consumption\")+\n  ylab(\"Grade\")+\n  ggtitle(\"First period grade\")\n\nc6 <- ggplot(students, aes(x=Dalc, y=G2, fill=Dalc))+\n  geom_point()+\n  theme_bw()+\n  theme(legend.position=\"none\")+\n  scale_fill_manual(values=waffle.col)+\n  xlab(\"Alcohol consumption\")+\n  ylab(\"Grade\")+\n  ggtitle(\"Second period grade\")\n\nc7 <- ggplot(students, aes(x=Dalc, y=G3, fill=Dalc))+\n  geom_point()+\n  theme_bw()+\n  theme(legend.position=\"none\")+\n  scale_fill_manual(values=waffle.col)+\n  xlab(\"Alcohol consumption\")+\n  ylab(\"Grade\")+\n  ggtitle(\"Final period grade\")\n\ngrid.arrange(c5,c6,c7,ncol=3)\n\n\n#weekend\nc8 <- ggplot(students, aes(x=Walc, y=G1, fill=Walc))+\n  geom_point()+\n  theme_bw()+\n  theme(legend.position=\"none\")+\n  scale_fill_manual(values=waffle.col)+\n  xlab(\"Alcohol consumption\")+\n  ylab(\"Grade\")+\n  ggtitle(\"First period grade\")\n\nc9 <- ggplot(students, aes(x=Walc, y=G2, fill=Walc))+\n  geom_point()+\n  theme_bw()+\n  theme(legend.position=\"none\")+\n  scale_fill_manual(values=waffle.col)+\n  xlab(\"Alcohol consumption\")+\n  ylab(\"Grade\")+\n  ggtitle(\"Second period grade\")\n\nc10 <- ggplot(students, aes(x=Walc, y=G3, fill=Walc))+\n  geom_point()+\n  theme_bw()+\n  theme(legend.position=\"none\")+\n  scale_fill_manual(values=waffle.col)+\n  xlab(\"Alcohol consumption\")+\n  ylab(\"Grade\")+\n  ggtitle(\"Final period grade\")\n\ngrid.arrange(c8,c9,c10,ncol=3)\n\n\n######################################################################\n### Pattern Prediction\n### Pattern - Distribution of First, Second & Third Period Grades \n###           on Number of Students\n######################################################################\n# plots based on GRADES\ngraph1 <- ggplot(students, aes(G1)) + geom_histogram(binwidth=1, colour=\"black\", fill=\"green\") +\n  labs(x=\"First Period Grade\", y = \"Number of Students\", title = \"Plot of First Period Grades\") +\n  geom_vline(data=students, aes(xintercept=mean(students$G1),  colour= \"mean\" ),\n             linetype=\"dashed\", size=1)\n\ngraph2 <- ggplot(students, aes(G2)) + geom_histogram(binwidth=1, colour=\"black\", fill=\"green\") +\n  labs(x=\"Second Period Grade\", y = \"Number of Students\", title = \"Plot of Second Period Grades\") +\n  geom_vline(data=students, aes(xintercept=mean(students$G2),  colour= \"mean\" ),\n             linetype=\"dashed\", size=1)\n\ngraph3 <- ggplot(students, aes(G3)) + geom_histogram(binwidth=1, colour=\"black\", fill=\"green\") +\n  labs(x=\"Third Period Grade\", y = \"Number of Students\", title = \"Plot of Third Period Grades\") +\n  geom_vline(data=students, aes(xintercept=mean(students$G3),  colour= \"mean\" ),\n             linetype=\"dashed\", size=1)\ngrid.arrange(graph1,graph2,graph3, nrow=3)\n\n\n######################################################################\n### Pattern Prediction\n### Pattern - Weekly alcohol consumption of males and females and\n###           their effects on G1, G2 and G3 grades\n######################################################################\n#Daily and weekly alcohol consumption and Grade Scores.\ngraph4 <- ggplot(students, aes(x = Walc, y = G1 , color = sex)) + geom_boxplot\ngraph5 <- ggplot(students, aes(x = Walc, y = G2 , color = sex)) + geom_boxplot\ngraph6 <- ggplot(students, aes(x = Walc, y = G3 , color = sex)) + geom_boxplot\ngrid.arrange(graph4,graph5,graph6, nrow=3)\n\n######################################################################\n### Pattern Prediction\n### Pattern - Daily alcohol consumption of males and females and\n###           their effects on G1, G2 and G3 grades\n######################################################################\ngraph7 <- ggplot(students, aes(x = Dalc, y = G1 , color = sex)) +  geom_point(color='darkblue')\ngraph8 <- ggplot(students, aes(x = Dalc, y = G2 , color = sex)) +  geom_point(color='darkblue')\ngraph9 <- ggplot(students, aes(x = Dalc, y = G3 , color = sex)) +  geom_point(color='darkblue')\ngrid.arrange(graph7,graph8,graph9, nrow=3)\n\n\n# 2 sample t-test\nabsences_low<-subset(students, students$absences<=10)\nabsences_high<-subset(students, students$absences>10)\n\nsummary(absences_low$absences)\nsummary(absences_high$absences)\n\nmean_low<-mean(absences_low$absences)\nmean_high<-mean(absences_high$absences)\n\nsd_low<-sd(absences_low$absences)\nsd_high<-sd(absences_high$absences)\n\nstr(absences_low$absences)\nstr(absences_high$absences)\n\nnum1<-929\nnum2<-115\n\ndfs<-min(num1-1,num2-1)\ntdata <- (mean_high - mean_low) / sqrt((sd_low^2/num1)+(sd_high^2/num2))\npvalue <- 2*pt(tdata, df = dfs, lower.tail=FALSE)\ntdata\npvalue\n# Performing 2-sample t-test to test the hypothesis\n# Let's consider the hypothesis as below:\n# H0 : mean_low = mean_high ; H1 : mean_low != mean_high\n# Here from tdata we get p value as 2.991679e-33 which is very low. Therefore we have extremely strong \n# evidence to reject our null hypothesis(H0)\n\n\n\n#After combining both the datasets, now we will eliminate the repeats here\nstudentsnorepeats<-students %>% distinct(school,sex,age,address,famsize,Pstatus,\n                                         Medu,Fedu,Mjob,Fjob,reason,\n                                         guardian,traveltime,studytime,failures,\n                                         schoolsup, famsup,activities,nursery,higher,internet,\n                                         romantic,famrel,freetime,goout,Dalc,Walc,health,absences, .keep_all = TRUE)\n\n# Now add a column with average grades(Avergae of G1,G2,G3)\nstudentsnorepeats$avggrades=rowMeans(cbind(studentsnorepeats$G1,studentsnorepeats$G2,studentsnorepeats$G3))\nView(studentsnorepeats)\n# drop the individual grades in 3 marking periods.\nstudentsnorepeats<-studentsnorepeats[,-(31:33)]\n\n#Boxplot of Avergae subject grades grouped by the levels of daily alcohol consumption\nggplot(studentsnorepeats, aes(x=Dalc, y=avggrades, group=Dalc))+\n  geom_boxplot(fill='#A4A4A4', color=\"blue\")+\n  theme(legend.position=\"none\")+\n  scale_fill_manual(values=waffle.col)+\n  xlab(\"Daily Alcohol consumption\")+\n  ylab(\"Average Grades\")+\n  ggtitle(\"Average Grade vs Dalc\")\n\n#Boxplot of Avergae subject grades grouped by the levels of weekend alcohol consumption\nggplot(studentsnorepeats, aes(x=Walc, y=avggrades, group=Walc))+\n  geom_boxplot(fill='#A4A4A4', color=\"Darkred\")+\n  theme(legend.position=\"none\")+\n  scale_fill_manual(values=waffle.col)+\n  xlab(\"Weekend Alcohol consumption\")+\n  ylab(\"Average Grades\")+\n  ggtitle(\"Average Grade vs Walc\")\n\n# We can observe the median average grade is higher among those students who had low levels of daily alcohol consumption\n# But the  median grade of students with medium, high and very high levels of daily alcohol consumption very similar.\n# Hence we will do a multiple linear regrssion and build a regression tree  of average grades on variables.\n\n# Here we are removing the variable failures from the dataset as failures and average grades represent the same general student aptitude.\nremovefail<-which(names(studentsnorepeats)==\"failures\")\nstudentsnorepeats<-studentsnorepeats[,-removefail]\nsummary(studentsnorepeats)\n\n# Now we wll perform multiple regression\n# average grades with all other predictor variables\nlm2<-lm(avggrades~., data=studentsnorepeats[,1:30])\nsummary(lm2)\n\n# Here the adjusted r-squared value is 0.17 which is very low, which implies that only 17% of variation in the average grades\n# is explained by everything else, so lets see whch other variables have a stronger impact on average grades\n\n\n# Generating the Regression tree\nlibrary(rpart)\nregtree<-rpart(avggrades~., data=studentsnorepeats[,1:30])\nprettyTree(regtree)\n\n# As per the above regression tree analysis , one variable which has significant impact is  \"higher\n# which  indicates whether the student wants to pursue higher education or no.\n# The majority of students want to pursue higher education which is evident from theier average grade which is (11.4 out of 20)\n# and this average is higher than the students average(8.47 out of 20) who do not want to pursue higher education\n# the regression tree analysis also specfies that moder's education is another feature which can have impact on average gardes as well\n\n# Date - June 18, 2017\n# Now lets evaluate the predictive perfomance of two models , we are normalizing the mean squared error of two models\n\nlreg.predictions<-predict(lm2,studentsnorepeats)\nrtree.predictions<-predict(regtree,studentsnorepeats)\n\nnmse.lm<-mean((lreg.predictions-studentsnorepeats[,\"avggrades\"])^2)/mean((mean(studentsnorepeats$avggrades)-studentsnorepeats[,\"avggrades\"])^2)\nnmse.rt<-mean((rtree.predictions-studentsnorepeats[,\"avggrades\"])^2)/mean((mean(studentsnorepeats$avggrades)-studentsnorepeats[,\"avggrades\"])^2)\n\nprint(nmse.lm) #0.7984877\nprint(nmse.rt) #0.849412\n\n# We can observe that the linear regression model performs better than the regression tree as the\n# standard error for linear model(0.76) is less than the regression tree(0.81)\n\n\n# We now show the model which depicts the error scatter plots\n\nlregplotdata=data.frame(cbind(lreg.predictions,studentsnorepeats[,\"avggrades\"]))\ncolnames(lregplotdata)<-c(\"lm.predictions\",\"avggrades\")\nrtreeplotdata=data.frame(cbind(rtree.predictions,studentsnorepeats[,\"avggrades\"]))\ncolnames(rtreeplotdata)<-c(\"rtree.predictions\",\"avggrades\")\n\nstudentsnorepeats$Dalc<-as.factor(studentsnorepeats$Walc)\n\nerrorplot.lreg = ggplot(lregplotdata,aes(lreg.predictions,avggrades))+\n  geom_point(aes(color=as.factor(studentsnorepeats[,\"Walc\"])))+\n  xlab(\"Predicted Grades (Linear Model)\")+\n  ylab(\"Actual Grades\")+\n  geom_abline(intercept=0,slope=1,color=\"#0066CC\",size=1)+\n  scale_colour_brewer(palette = \"Set1\",name = \"Weekend Alcohol \\nConsumption\")\n\nerrorplot.rtree = ggplot(rtreeplotdata,aes(rtree.predictions,avggrades))+\n  geom_point(aes(color=as.factor(studentsnorepeats[,\"Walc\"])))+\n  xlab(\"Predicted Grades (Regression Tree)\")+\n  ylab(\"Actual Grades\")+\n  geom_abline(intercept=0,slope=1,color=\"#0066CC\",size=1)+\n  scale_colour_brewer(palette = \"Set1\",name = \"Weekend Alcohol \\nConsumption\")\n\ngrid.arrange(errorplot.rtree)\ngrid.arrange(errorplot.lreg,errorplot.rtree,nrow=2)\n\n# Observation : In the above graphs, horizontal axes represents predicted grades and vertical axes represet actual grades\n# For the model to be accurate , the predicted grades should be equal to actual grades and the scatter points \n# should be inline along the 45 degree line(blue line).\n# But, that not the case here and both the models do not help in accurately predicting student average grades\n# so, we now process to use randon forest and find out if it helps in accurately predition.\n\n\n#Random forest \nlibrary(randomForest)\nset.seed(4543)\nView(studentsnorepeats)\nis.finite(studentsnorepeats$avggrades)\nis.infinite(studentsnorepeats$avggrades)\n\nstudentsnorepeats$school <- as.factor(studentsnorepeats$school)\nstudentsnorepeats$sex <- as.factor(studentsnorepeats$sex)\nstudentsnorepeats$address <- as.factor(studentsnorepeats$address)\nstudentsnorepeats$famsize <- as.factor(studentsnorepeats$famsize)\nstudentsnorepeats$Pstatus <- as.factor(studentsnorepeats$Pstatus)\nstudentsnorepeats$Mjob <- as.factor(studentsnorepeats$Mjob)\nstudentsnorepeats$Fjob <- as.factor(studentsnorepeats$Fjob)\nstudentsnorepeats$reason <- as.factor(studentsnorepeats$reason)\nstudentsnorepeats$guardian <- as.factor(studentsnorepeats$guardian)\nstudentsnorepeats$schoolsup <- as.factor(studentsnorepeats$schoolsup)\nstudentsnorepeats$famsup <- as.factor(studentsnorepeats$famsup)\nstudentsnorepeats$paid <- as.factor(studentsnorepeats$paid)\n\nstudentsnorepeats$activities <- as.factor(studentsnorepeats$activities)\nstudentsnorepeats$nursery <- as.factor(studentsnorepeats$nursery)\nstudentsnorepeats$higher <- as.factor(studentsnorepeats$higher)\nstudentsnorepeats$internet <- as.factor(studentsnorepeats$internet)\nstudentsnorepeats$romantic <- as.factor(studentsnorepeats$romantic)\nstudentsnorepeats$paid <- as.factor(studentsnorepeats$paid)\n\n\nrandfor<-randomForest(avggrades~., data=studentsnorepeats[,1:30], ntree=500, importance=T)\nrf.predictions<-predict(randfor,studentsnorepeats)\n\n\n# normalised mean standard error\nnmse.rf<-mean((rf.predictions-studentsnorepeats[,\"avggrades\"])^2)/mean((mean(studentsnorepeats$avggrades)-studentsnorepeats[,\"avggrades\"])^2)\nprint(nmse.rf)\n# 0.2016583\n\n# Observation : We can see that the normalized mean standard error of the random forest is 0.2016583 which is\n# very much lower than the linear and regression tree models.\n\n# To validate this, lets plot the error plot of the random forest to compare it with the error plots of linear \n# and regression models \n\n\n# first combine the rf predictions and actual scores in a single data frame\nrfplot=data.frame(cbind(rf.predictions,studentsnorepeats[,\"avggrades\"]))\ncolnames(rfplot)<-c(\"rf.predictions\",\"avggrades\")\n\n# then create the error plot.\nerrplot.rf1<-ggplot(rfplot,aes(rf.predictions,avggrades))+\n  geom_point(aes(color=as.factor(studentsnorepeats[,\"Walc\"])))+\n  xlab(\"Predicted Grades (Random Forest with 500 Trees)\")+\n  ylab(\"Actual Grades\")+\n  geom_abline(intercept=0,slope=1,color=\"#0066CC\",size=1)+\n  scale_colour_brewer(palette = \"Set1\",name = \"Weekend Alcohol \\nConsumption\")\n\n# finally, plot the error plot from the random forest with the error plots of the linear and regression tree models.\ngrid.arrange(errplot.rf1, errorplot.lreg,errorplot.rtree,nrow=3)\n\n\n# Observation : From the grapgh of error plots, we can say that random forest seems to be much better predictor\n# of average grades than the linear or regression model.\n\n\n# Lets plot the graph to check which varibales most impact the student grades as measured by random forest with 500 trees\nvarImpPlot(randfor,type=1, main=\"Highest Impact Variable\")\n\n\n\n\n######################################################################################\n### Pattern Prediction\n### Pattern - Mother's education and Average grades \n### Description - Here x- axis represents the avereage grades , y-axis the count, \n### and on the right side the number 0,1,2,3,4 represents the level of education\n######################################################################################\nggplot(studentsnorepeats, aes(x=avggrades)) + geom_histogram(fill=\"yellow\", colour=\"red\", binwidth = 2) +\n  facet_grid(Medu ~ .)+ggtitle(\"Mother's Education and Average Grades\")+\n  geom_vline(data=aggregate(studentsnorepeats[30], studentsnorepeats[7], median), mapping=aes(xintercept=avggrades), color=\"black\")\n\n\n\n######################################################################################\n### Pattern Prediction\n### Pattern - Father's education and Average grades\n### Description - Here x- axis represents the avereage grades , y-axis the count, \n### and on the right side the number 0,1,2,3,4 represents the level of education\n######################################################################################\nggplot(studentsnorepeats, aes(x=avggrades)) + geom_histogram(fill=\"yellow\", colour=\"red\",binwidth = 2) +\n  facet_grid(Fedu ~ .)+ggtitle(\"Father's education and Final Grades\")+\n  geom_vline(data=aggregate(studentsnorepeats[30], studentsnorepeats[8], median), mapping=aes(xintercept=avggrades), color=\"black\")\n\n\n# Observation : As the mother's and father's level of education increases, the median avergae grade also increases.\n# We can conculde that mother's and father's education level is certainly a factor for scoring good grades\n\n\n# Lets see if having romantic relationship will affect average grades\n\nstudentsnorepeats %>% group_by(romantic) %>% summarise(n=mean(avggrades,na.rm=T)) %>%\n  ggplot(aes(x=romantic,y=n))+geom_bar(stat=\"identity\")\n\n\n# As per the graph, the mean final grade (average grade) for those who were not in  \n# a relationship is greatehr than those who were.\n\n\n# Let's see how are these scores distributed\nggplot(studentsnorepeats, aes(x=avggrades, fill=romantic)) +\n  geom_histogram(position=\"identity\", alpha=0.4,binwidth=1.0)\n\n# Observation : We can see from the distribution that Students who were not in relationships scored \n#higher grades more frequently than those students who were in relationships.\n\n# Now we will check if students involved in extra curricular activities are  more likely to be in a romantic relationship?\n\nromact <- studentsnorepeats %>% group_by(romantic,activities) %>% summarise(n=n()) \ntest123 <- ddply(romact, \"activities\", transform,\n                 percent_weight = n / sum(n) * 100)\nggplot(test123, aes(x=activities, y=percent_weight, fill=romantic)) +\n  geom_bar(stat=\"identity\")+geom_text(aes(label=percent_weight), vjust=1.5, colour=\"white\",\n                                      position=position_dodge(.9), size=3)+ggtitle(\"Activities and Romantic Relationships\")\n\n\n# So we can conclude that if students are being involved in extra curricular atvitites, it increases the\n# chances of being in a relationship  by around 4.5%.\n\n#=========================================================================\n# Data Transformation\n# We have many variables which are numerical whcih are stored as categorical, \n# so lets transfrom those variables\n# so that the numerical variables are'nt treated as continous variables'\n#=========================================================================\n\ntransformdata = students  %>% \n  mutate(Medu = ordered(Medu, levels = c(0:4), labels = c(\"No Ed?\",\"Primary Ed\", \"5th-9th Grade\", \"Secondary Ed\", \"Higher Ed\")),\n         Fedu = ordered(Fedu, levels = c(0:4), labels = c(\"No Ed?\", \"Primary Ed\", \"5th-9th Grade\", \"Secondary Ed\", \"Higher Ed\")),\n         traveltime = ordered(traveltime, levels = c(1:4), labels = c(\"<15 min\", \"15-30 min\", \"30 min-1 hr\", \">1 hr\")),\n         studytime = ordered(studytime, levels = c(1:4), labels = c(\"<2 hrs\",\"2-5 hrs\",\"5-10 hrs\",\"10 hrs\"))) %>% \n  mutate_at(.vars = vars(reason, school, sex, address, famsize, Pstatus, Mjob, Fjob, \n                         reason,guardian,schoolsup:health), .funs = as.factor)\n\nView(transformdata)\n###### Z-score standardization for absences\nstudents$absences <- (students$absences-mean(students$absences))/sd(students$absences)\nstudents$absences\nstr(students)\n\nabsences_outliers <- subset(students, students$absences > 3 & students$absences < -3)\nnrow(absences_outliers)\n#Number of Outliers after standardization : 0\n\n# Z-score standardization for age\nstudents$age <- (students$age-mean(students$age))/sd(students$age)\nstudents$age\nstr(students)\n\nage_outliers <- subset(students, students$age > 3 & students$age < -3)\nnrow(age_outliers)\n#Number of Outliers after standardization : 0\n\n\n#### Min Max Normalization for absences\nsummary(students$absences)\n\nclass(students$absences)\nx <- students$absences\nnormalize = (x-min(x))/(max(x)-min(x))\n\nhist(students$absences, breaks=10, xlab=\"Absences\", col=\"lightblue\", main=\"\")\nhist(normalize, breaks=10, xlab=\"Normalized Absences\", col=\"lightblue\", main=\"\")\n\n\n#### Min Max Normalization for age\nsummary(students$age)\n\nclass(students$age)\nx <- students$age\nnormalize = (x-min(x))/(max(x)-min(x))\n\nhist(students$age, breaks=10, xlab=\"Age\", col=\"lightblue\", main=\"\")\nhist(normalize, breaks=10, xlab=\"Normalized Age\", col=\"lightblue\", main=\"\")\n\n\n\n#=========================================================================\n# Binning using k-means clustering\n# create a new variable to hold the category of the record(HIGH,MEDIUM,LOW)\n#=========================================================================\nlibrary(cluster)\nView(studentsnorepeats)\n\nstuclusters <- kmeans(studentsnorepeats$avggrades, centers = 2)\nwhichbin <- stuclusters$cluster;\n\nbin1<- rownames(studentsnorepeats[ stuclusters$cluster==1,])\nbin2 <- rownames(studentsnorepeats[ stuclusters$cluster==2,])\n\nbin1meantemp <- mean(studentsnorepeats$avggrades[which(rownames(studentsnorepeats) %in% bin1)])\nbin2meantemp <- mean(studentsnorepeats$avggrades[which(rownames(studentsnorepeats) %in% bin2)])\n\navgGradeCat <- c(\"-1\", \"-1\")\nmaxMean <- max(bin1meantemp,bin2meantemp)\nminMean <- min(bin1meantemp,bin2meantemp)\n\nif(bin1meantemp == maxMean){\n  avgGradeCat[1]=\"HIGH\"\n}else{\n    avgGradeCat[1]=\"LOW\"\n  }\n\nif(bin2meantemp == maxMean){\n  avgGradeCat[2]=\"HIGH\"\n}else{\n    avgGradeCat[2]=\"LOW\"\n  }\n\n\nstuclusters\n\nfor(i in 1:nrow(studentsnorepeats)){\n  if(whichbin[i]==1){\n    studentsnorepeats$avgGradeCat[i] <- avgGradeCat[1]\n  }\n  else if(whichbin[i]==2){\n    studentsnorepeats$avgGradeCat[i] <- avgGradeCat[2]\n  }\n}\n\nlibrary(fpc)\nplotcluster(studentsnorepeats$avggrades,stuclusters$cluster)\n\n\n\n\n#Binning for Dalc\nstudentsnorepeats$Dalc <- as.numeric(studentsnorepeats$Dalc)\nstuclustersDalc <- kmeans(studentsnorepeats$Dalc, centers = 2)\nwhichbinDalc <- stuclustersDalc$cluster;\n\nbin1D <- rownames(studentsnorepeats[ stuclustersDalc$cluster==1,])\nbin2D <- rownames(studentsnorepeats[ stuclustersDalc$cluster==2,])\n\nbin1Dmean <- mean(studentsnorepeats$Dalc[which(rownames(studentsnorepeats) %in% bin1D)])\nbin2Dmean <- mean(studentsnorepeats$Dalc[which(rownames(studentsnorepeats) %in% bin2D)])\n\nDalcCat <- c(\"-1\", \"-1\")\nmaxMean <- max(bin1Dmean,bin2Dmean)\nminMean <- min(bin1Dmean,bin2Dmean)\n\nif(bin1Dmean == maxMean){\n  DalcCat[1]=\"HIGH\"\n}else{\n    DalcCat[1]=\"LOW\"\n  }\n\nif(bin2Dmean == maxMean){\n  DalcCat[2]=\"HIGH\"\n}else{\n    DalcCat[2]=\"LOW\"\n  }\n\n\nstuclustersDalc\n\nfor(i in 1:nrow(studentsnorepeats)){\n  if(whichbinDalc[i]==1){\n    studentsnorepeats$DalcCat[i] <- DalcCat[1]\n  }\n  else if(whichbinDalc[i]==2){\n    studentsnorepeats$DalcCat[i] <- DalcCat[2]\n  }\n\n}\n\nlibrary(fpc)\nplotcluster(studentsnorepeats$Dalc,stuclustersDalc$cluster)\n\n\n####\n#Binning for Walc\nstudentsnorepeats$Walc <- as.numeric(studentsnorepeats$Walc)\nstuclustersWalc <- kmeans(studentsnorepeats$Walc, centers = 2)\nwhichbinWalc <- stuclustersWalc$cluster;\n\nbin1W <- rownames(studentsnorepeats[ stuclustersWalc$cluster==1,])\nbin2W <- rownames(studentsnorepeats[ stuclustersWalc$cluster==2,])\n\nView(studentsnorepeats)\n\nbin1Wmean <- mean(studentsnorepeats$Walc[which(rownames(studentsnorepeats) %in% bin1W)])\nbin2Wmean <- mean(studentsnorepeats$Walc[which(rownames(studentsnorepeats) %in% bin2W)])\n\nWalcCat <- c(\"-1\", \"-1\")\nmaxMean <- max(bin1Wmean,bin2Wmean)\nminMean <- min(bin1Wmean,bin2Wmean)\n\nif(bin1Wmean == maxMean){\n  WalcCat[1]=\"HIGH\"\n}else{\n    WalcCat[1]=\"LOW\"\n  }\n\nif(bin2Wmean == maxMean){\n  WalcCat[2]=\"HIGH\"\n}else{\n    WalcCat[2]=\"LOW\"\n  }\n\n\nstuclustersWalc\n\nfor(i in 1:nrow(studentsnorepeats)){\n  if(whichbinWalc[i]==1){\n    studentsnorepeats$WalcCat[i] <- WalcCat[1]\n  }\n  else if(whichbinWalc[i]==2){\n    studentsnorepeats$WalcCat[i] <- WalcCat[2]\n  }\n}\n\nlibrary(fpc)\nplotcluster(studentsnorepeats$Walc,stuclustersWalc$cluster)\n\n\n#=========================================================================\n# EDA of all the variables\n# based on the risk of alcohol consumption\n#=========================================================================\n\n# copying the dataset into new dataset\nstudents11 <- studentsnorepeats\n\n# typical x-axis label\nns <- list(title = \"Number of Students\")\n# typical x-axis label\nrisk <- list(title = \"Risk\")\n\nstudents11$Fjob <- factor(students11$Fjob, levels = c(\"at_home\",\"health\",\"other\",\"services\",\"teacher\"), \n                          labels = c(\"At_Home\", \"Health\",\"Other\",\"Services\",\"Teacher\"))\n\nm <- list(pad = 5,\n          t = 80,\n          b = 80)\nView(students11)\nnames(students11)[26] <- \"Weekday\"\nnames(students11)[27] <- \"Weekend\"\n# Create a new features for the sum of students' drinking habits\nstudents11$Total <- as.numeric(students11$Weekend) + as.numeric(students11$Weekday)\n\n# Create the drinking risk levels for students\nstudents11$Risk <- \"Low\"\nstudents11$Risk[students11$Total > 5 | students11$Weekend >= 4 | students11$Weekday >= 4] <- \"High\"\nstudents11$Risk <- factor(students11$Risk, levels = c(\"Low\",\"High\"))\n\n#Length of the dataframe\nlen_df <- dim(students11)[1]\n\nlibrary(plotly)\nplot_ly(students11, x = ~Weekday, type = \"histogram\", \n        marker = list(line = list(color = 'white', width = 1))) %>%\n  layout(title = \"Alcohol Consumption during the Week\",\n         yaxis = ns,\n         xaxis = list(title = \"Amount of Alcohol\"),\n         margin = m)\nprint(\"Percent of students in each drinking level:\")\ntable(students11$Weekday) / len_df\n# we can observe from above that just  about more than 5% of students drink more amount of alchohol(i.e >4) \n# during the week\n\nplot_ly(students11, x = ~Weekend, type = \"histogram\", \n        marker = list(line = list(color = 'white', width = 1))) %>%\n  layout(title = \"Alcohol Consumption on Weekends\",\n         yaxis = ns,\n         xaxis = list(title = \"Amount of Alcohol\"),\n         margin = m)\nprint(\"Percent of students in each drinking level:\")\ntable(students11$Weekend) / len_df\n\n#For weekends, we can observe that more number of students consume alcohol when compared to weekdays.\n#On weekends, the consumption in % is just about 20% whereas in weekdays it is 5%.\n#Also those drinking very less alcohol has been decreased in weekends (356 students) when compared to weekdays(663)\n\n#Total consumtion of alcohol\nplot_ly(students11, x = ~Total, type = \"histogram\", \n        marker = list(line = list(color = 'white', width = 1))) %>%\n  layout(title = \"Total Alcohol Consumption (Weekday + Weekend)\",\n         xaxis = list(title = \"Amount of Alcohol\"),\n         yaxis = ns,\n         margin = m)\nprint(\"Percent of students in each group:\")\ntable(students11$Total) / len_df\n\n#Based on gender\nstudents11$sex <- factor(students11$sex, levels = c(\"F\",\"M\"), \n                         labels = c(\"Female\", \"Male\"))\n\n\ng1 <- plot_ly(students11, x=~sex, color = ~Risk, type = \"histogram\") %>%\n  layout(barmode = \"stack\",\n         xaxis = list(title = \"Gender\"))\nab <- data.frame(prop.table(table(students11$Risk, students11$sex),1))\ng2 <-plot_ly(ab, x=ab$Var1, y =~Freq, color = ab$Var2, type = \"bar\") %>%\n  layout(barmode = \"stack\",\n         xaxis = risk)\nsubplot(g1,g2, margin = 0.04, titleX = TRUE) %>%\n  layout(title = \"Sex vs Risk\",\n         yaxis = ns,\n         margin = m)\nprint(\"Number of students of each gender:\")\ntable(students11$sex)\ntable(students11$sex)/len_df\n\n#Despite 56% of the students being female, 70% of those in the high risk group are males.\n\n#Pattern by age\na1 <- plot_ly(students11, x=~age, color = ~Risk, type = \"histogram\",\n              marker = list(line = list(color = \"white\", width = 1))) %>%\n  layout(barmode = \"stack\",\n         xaxis = list(title = \"Age\"),\n         margin = m)\nabc <- data.frame(prop.table(table(students11$Risk, students11$age),1))\na2 <-plot_ly(abc, x=abc$Var1, y =~Freq, color = abc$Var2, type = \"bar\",\n             marker = list(line = list(color = \"white\", width = 1))) %>%\n  layout(barmode = \"stack\",\n         xaxis = risk,\n         margin = m)\nsubplot(a1,a2, margin = 0.04, titleX = TRUE) %>%\n  layout(title = \"Age vs Risk\")\nprint(\"Number of students of each age:\")\ntable(students11$age)\ntable(students11$age) / len_df\nprint(\"Correlation between age and risk\")\ncor(students11$age, as.numeric(students11$Risk))\n\n# Simplify age to 2 groups, >= 19, < 19.\n# You will notice that more features like this one will be created. This goal for these\n# features is to simplify the data to improve predictions.\nstudents11$ageSimple <- 0\nstudents11$ageSimple[students11$age >= 19] <- 1\n#We can see that as age increases, students tend to consume more alcohol\n#Now lets see if the parents marital status has any affect on \n# alcohol consumption as we think it will definitely affect studnets\nstudents11$Pstatus <- factor(students11$Pstatus, levels = c(\"A\",\"T\"), \n                             labels = c(\"Apart\", \"Together\"))\n\nm1 <- plot_ly(students11, x=~Pstatus, color = ~Risk, type = \"histogram\",\n              marker = list(line = list(color = \"white\", width = 1))) %>%\n  layout(barmode = \"stack\",\n         xaxis = list(title = \"Parents' Marriage Status\"))\nabcd <- data.frame(prop.table(table(students11$Risk, students11$Pstatus),1))\nm2 <-plot_ly(abcd, x=abcd$Var1, y =~Freq, color = abcd$Var2, type = \"bar\",\n             marker = list(line = list(color = \"white\", width = 1)),\n             showlegend = FALSE) %>%\n  layout(barmode = \"stack\",\n         xaxis = risk)\nsubplot(m1,m2, margin = 0.04, titleX = TRUE) %>%\n  layout(title = \"Parents' Marriage Status vs Risk\",\n         yaxis = ns,\n         margin = m)\nprint(\"Number of students of each parental marriage status group:\")\ntable(students11$Pstatus)\ntable(students11$Pstatus)/len_df\n\n#But form the above observations its clear that there is no effect of parents martial status on students alcohol consumption\n\n#Let's see if father's job has nay affect on students alcohol consumption\nstudents11$Fjob <- studentsnorepeats$Fjob\nstudents11$Fjob <- factor(students11$Fjob, levels = c(\"at_home\",\"health\",\"other\",\"services\",\"teacher\"), \n                          labels = c(\"At_Home\", \"Health\",\"Other\",\"Services\",\"Teacher\"))\n\nView(students11)\nf1 <- plot_ly(students11, x=~Fjob, color = ~Risk, type = \"histogram\",\n              marker = list(line = list(color = \"white\", width = 1))) %>%\n  layout(barmode = \"stack\",\n         xaxis = list(title = \"Type of Father's job\"))\n\nxy <- data.frame(prop.table(table(students11$Risk, students11$Fjob),1))\nf2 <-plot_ly(xy, x=xy$Var1, y =~Freq, color = xy$Var2, type = \"bar\",\n             marker = list(line = list(color = \"white\", width = 1))) %>%\n  layout(barmode = \"stack\",\n         xaxis = risk)\nsubplot(f1,f2, margin = 0.04, titleX = TRUE) %>%\n  layout(title = \"Father's Job Type vs Risk\",\n         yaxis = ns,\n         margin = m)\nprint(\"Number of students for each type of job (Father):\")\ntable(students11$Fjob)\ntable(students11$Fjob)/len_df\n\nstudents11$FjobSimple <- 0 \nstudents11$FjobSimple[df$Fjob == 'Services'] <- 1\n\n#Observation : We can say that if father works in service, then their child is more likely to abuse alcohol.\n\n#Lets see whether students who recieve educational support are abusive to alcohol\nstudents11$famsup <- factor(students11$famsup, levels = c(\"no\",\"yes\"), labels = c(\"No\", \"Yes\"))\n\nfs <- plot_ly(students11, x=~famsup, color = ~Risk, type = \"histogram\",\n              marker = list(line = list(color = \"white\", width = 1))) %>%\n  layout(barmode = \"stack\",\n         xaxis = list(title = \"Educational Support from Family\"))\nfps <- data.frame(prop.table(table(students11$Risk, students11$famsup),1))\nfs1 <-plot_ly(fps, x=fps$Var1, y =~Freq, color = fps$Var2, type = \"bar\",\n              marker = list(line = list(color = \"white\", width = 1))) %>%\n  layout(barmode = \"stack\",\n         xaxis = risk)\nsubplot(fs,fs1, margin = 0.04, titleX = TRUE) %>%\n  layout(title = \"Educational Support From Family vs Risk\",\n         yaxis = ns,\n         margin = m)\nprint(\"Number of students for each educational support group:\")\ntable(students11$famsup)\ntable(students11$famsup)/len_df\nby(as.numeric(students11$famsup), students11$Risk, summary)\n\n# So, we can say that students who do not recieve educational support \n# are very much likely to be abussive to alcohol\n\n####\n#Lets see if students who go out with friends have a tendency to drink more alcohol\nstudents11$goout <- factor(students11$goout, levels = c(\"1\",\"2\",\"3\",\"4\",\"5\"),\n                           labels = c(\"Very Low\",\"Low\",\"Average\",\"High\",\"Very High\"))\n\n\ngo <- plot_ly(students11, x=~goout, color = ~Risk, type = \"histogram\",\n              marker = list(line = list(color = \"white\", width = 1))) %>%\n  layout(barmode = \"stack\",\n         xaxis = list(title = \"Frequency of Going Out with Friends\"))\ng <- data.frame(prop.table(table(students11$Risk, students11$goout),1))\ngo1 <-plot_ly(g, x=g$Var1, y =~Freq, color = g$Var2, type = \"bar\",\n              marker = list(line = list(color = \"white\", width = 1))) %>%\n  layout(barmode = \"stack\",\n         xaxis = risk)\nsubplot(go,go1, margin = 0.04, titleX = TRUE) %>%\n  layout(title = \"Frequency of Going Out with Friends vs Risk\",\n         yaxis = ns,\n         margin = m)\nprint(\"Number of students for each social group:\")\ntable(students11$goout)\ntable(students11$goout)/len_df\n\n\nggplotly(ggplot(aes(Risk, as.numeric(goout)), data = students11) +\n           geom_violin(alpha = 0.3, color = I(\"Red\"), fill = I(\"Red\")) +\n           geom_boxplot(alpha = 0.8, color = I(\"black\")) +\n           geom_point(position = position_jitter(width = 0.5, height = 0.1), \n                      color = I(\"blue\"),\n                      alpha = 0.4) +\n           ylab(\"Frequency of Going Out with Friends\") +\n           ggtitle(\"Frequency of Going Out with Friends vs Risk\")) %>%\n  layout(margin = list(t = 80,\n                       b = 80,\n                       pad = 5,\n                       l = 60))\nby(as.numeric(students11$goout), students11$Risk, summary)\nprint(\"Correlation between frequency of going out with friends and risk\")\ncor(as.numeric(students11$goout), as.numeric(students11$Risk))\n\nstudents11$gooutSimple <- 0\nstudents11$gooutSimple[as.numeric(students11$goout) == 4] <- 1\nstudents11$gooutSimple[as.numeric(students11$goout) == 5] <- 2\n\n#This could be the most differentiating feature that we have seen yet. \n# We can clearly see that students who go out with their friends more often \n# are more likely to be in the high risk group.\n\n##\n#Lets see if student's study time has any affect on alcohol consumption\nstudents11$studytime <- studentsnorepeats$studytime\nView(students11)\nstudents11$studytime <- factor(students11$studytime, levels = c(\"1\",\"2\",\"3\",\"4\"), \n                               labels = c(\"Less than 2 Hours\", \"2 to 5 Hours\",\"5 to 10 Hours\",\n                                          \"More than 10 Hours\"))\n\n\nst <- plot_ly(students11, x= ~studytime, color = ~Risk, type = \"histogram\",\n              marker = list(line = list(color = \"white\", width = 1))) %>%\n  layout(barmode = \"stack\",\n         xaxis = list(title = \"Time Spent Studying (Weekly)\"))\nst\nstime <- data.frame(prop.table(table(students11$Risk, students11$studytime),1))\nst1 <-plot_ly(stime, x=stime$Var1, y =~Freq, color = stime$Var2, type = \"bar\",\n              marker = list(line = list(color = \"white\", width = 1))) %>%\n  layout(barmode = \"stack\",\n         xaxis = risk)\nsubplot(st,st1, margin = 0.04, titleX = TRUE) %>%\n  layout(title = \"Time Spent Studying vs Risk\",\n         yaxis = ns,\n         margin = m)\nprint(\"Number of students for each study time group:\")\ntable(students11$studytime)\ntable(students11$studytime)/len_df\n\nggplotly(ggplot(aes(Risk, as.numeric(studytime)), data = students11) +\n           geom_violin(alpha = 0.3, color = I(\"Red\"), fill = I(\"Red\")) +\n           geom_boxplot(alpha = 0.5, color = I(\"black\")) +\n           geom_point(position = position_jitter(width = 0.5, height = 0.1), \n                      color = I(\"blue\"),\n                      alpha = 0.4) +\n           ylab(\"Time Spent Studying (Groupings)\") +\n           ggtitle(\"Time Spent Studying vs Risk\")) %>%\n  layout(margin = list(pad = 0,\n                       l = 60))\nby(as.numeric(students11$studytime), students11$Risk, summary)\nprint(\"Correlation between time spent studying and risk:\")\ncor(as.numeric(students11$studytime), as.numeric(students11$Risk))\n\nstudents11$studytimeSimple <- 0\nstudents11$studytimeSimple[as.numeric(students11$studytime) == 1] <- 1\n\n# There is a reasonable relationship here. \n# If a student spends less time studying, s/he is more likely to abuse alcohol. \n# Note: The values for 'Time Spent Studying' (1,2,3,4) represent \n# 'Less than 2 Hours', '2 to 5 Hours', '5 to 10 Hours', and 'More than 10 Hours'.\n\n\n#Multivariate analysis\nggplot(aes(as.numeric(goout), as.numeric(studytime), color = Risk), data = students11) +\n  geom_jitter() +\n  geom_smooth(se = FALSE, method = 'lm') +\n  ggtitle(\"Going Out vs Studying Time vs Risk\") +\n  xlab(\"Frequency of Going Out with Friends\") +\n  ylab(\"Time Spent Studying\")\nstudents11$gooutStudy <- 0\nstudents11$gooutStudy[as.numeric(students11$goout) == 5 & as.numeric(students11$studytime) == 1] <- 1\n\n# We can observe from the pattern that studnets who go out more frequentlt and study less consume more alcohol\n# as seen in the bottom right corener of the graph\n\n\n\n#=========================================================================\n# Modeling and Evaluation\n#=========================================================================\nlibrary(rpart)\nlibrary(rpart.plot)\nset.seed(12345)\ndata_random <- studentsnorepeats[order(runif(958)), ] #creating  a new dataframe \n# where rows are copies of the original dataframe but selected on a random generation of 1000 number\n\nView(data_random)\n\nsummary(studentsnorepeats$avggrades)\nsummary(data_random$avggrades) # we check that we get the same data in both dataframes...\n\nhead(studentsnorepeats$avggrades)\nhead(data_random$avggrades) # we check the order of both dataframes are different !\n\n# splitting the dataset\ndata_train <- data_random[1:700, ]\ndata_test  <- data_random[701:959, ]\n\n# check the data sets  \nprop.table(table(data_train$avgGradeCat))\nprop.table(table(data_test$avgGradeCat))\n\ndata_random$freetime\ndata_random$goout\n\n#=========================================================================\n# Modeling with CART\n#=========================================================================\ndata_model_cart <- rpart(avgGradeCat ~.,\n                         method=\"class\", data = data_train, control = rpart.control(cp = 0.0001))\n\nprintcp(data_model_cart) # display the results \nplotcp(data_model_cart) # visualize cross-validation results \nsummary(data_model_cart) # detailed summary of splits\n\n# plot tree \nplot(data_model_cart, uniform=TRUE, \n     main=\"Classification Tree for Alcohol Consmuption\")\ntext(data_model_cart, use.n=TRUE, all=TRUE, cex=.8)\n\nlibrary(\"rpart.plot\")\nrpart.plot(data_model_cart)\nstr(data_random)\n\n#=========================================================================\n# Modeling with C5.0\n#=========================================================================\n\n# Testing the model using test data set\ndata_predict_cart <- predict(data_model_cart,data_test)\n\n# Training the model\nx<-data_train[,c(1:30)]\ny<-data_train$avgGradeCat\ny<-as.factor(y)\nlibrary(C50)\ndata_model_c50 <- C5.0(x,y)\ndata_model_c50\nsummary(data_model_c50)\n\n#==========================================================================\n# Validating the accuracy of the model using cross table for propotions\n#==========================================================================\nlibrary(gmodels)\ndata_predict_c50 <- predict(data_model_c50,data_test)\nCrossTable(data_test$avgGradeCat, data_predict_c50,\n           prop.chisq = FALSE, prop.c = FALSE, prop.r = FALSE,\n           dnn = c('actual ', 'predicted '))\n\ndata_train %>% select(-avggrades) -> data_train\nView(data_train)\ndata_model_c50_01<- C5.0(data_train[,c(1:30)],as.factor(data_train$avgGradeCat))\nsummary(data_model_c50_01)\n\n# predicting again after removing avggrades from the dataset\ndata_predict_c50_01<- predict(data_model_c50_01,data_test)\nCrossTable(data_test$avgGradeCat, data_predict_c50_01,\n           prop.chisq = FALSE, prop.c = FALSE, prop.r = FALSE,\n           dnn = c('actual ', 'predicted '))\n\n\n#=========================================================================\n# Association - Finding Rules\n#=========================================================================\ndataset_for_association <- data_random # new dataset\nView(dataset_for_association) # display new dataset\n\n# Converting all the attributes into factor\ndataset_for_association$school <- as.factor(dataset_for_association$school)\ndataset_for_association$sex <- as.factor(dataset_for_association$sex)\ndataset_for_association$address <- as.factor(dataset_for_association$address)\ndataset_for_association$famsize <- as.factor(dataset_for_association$famsize)\ndataset_for_association$Pstatus <- as.factor(dataset_for_association$Pstatus)\ndataset_for_association$Mjob <- as.factor(dataset_for_association$Mjob)\ndataset_for_association$Fjob <- as.factor(dataset_for_association$Fjob)\ndataset_for_association$reason <- as.factor(dataset_for_association$reason)\ndataset_for_association$guardian <- as.factor(dataset_for_association$guardian)\ndataset_for_association$schoolsup <- as.factor(dataset_for_association$schoolsup)\ndataset_for_association$famsup <- as.factor(dataset_for_association$famsup)\ndataset_for_association$paid <- as.factor(dataset_for_association$paid)\n\ndataset_for_association$activities <- as.factor(dataset_for_association$activities)\ndataset_for_association$nursery <- as.factor(dataset_for_association$nursery)\ndataset_for_association$higher <- as.factor(dataset_for_association$higher)\ndataset_for_association$internet <- as.factor(dataset_for_association$internet)\ndataset_for_association$romantic <- as.factor(dataset_for_association$romantic)\ndataset_for_association$paid <- as.factor(dataset_for_association$paid)\n\ndataset_for_association$age <- as.factor(dataset_for_association$age)\ndataset_for_association$Medu <- as.factor(dataset_for_association$Medu)\ndataset_for_association$Fedu <- as.factor(dataset_for_association$Fedu)\ndataset_for_association$traveltime <- as.factor(dataset_for_association$traveltime)\ndataset_for_association$studytime <- as.factor(dataset_for_association$studytime)\ndataset_for_association$famrel <- as.factor(dataset_for_association$famrel)\ndataset_for_association$freetime <- as.factor(dataset_for_association$freetime)\ndataset_for_association$goout <- as.factor(dataset_for_association$goout)\ndataset_for_association$Dalc <- as.factor(dataset_for_association$Dalc)\ndataset_for_association$Walc <- as.factor(dataset_for_association$Walc)\ndataset_for_association$health <- as.factor(dataset_for_association$health)\ndataset_for_association$absences <- as.factor(dataset_for_association$absences)\ndataset_for_association$avggrades <- as.factor(dataset_for_association$avggrades)\ndataset_for_association$WalcCat <- as.factor(dataset_for_association$WalcCat)\ndataset_for_association$DalcCat <- as.factor(dataset_for_association$DalcCat)\ndataset_for_association$avgGradeCat <- as.factor(dataset_for_association$avgGradeCat)\n\n# view structure of the dataset\nstr(dataset_for_association)\n\n# removing unwanted attributes from the dataset\ndataset_for_association %>% select(-sex, -school, -Dalc, -Walc) -> dataset_for_association\nView(dataset_for_association)\n\n# using apriori algorithm to find out association rules for whole dataset\nrules <- apriori(dataset_for_association) \ninspect(rules)\n\n# rules with rhs containing \"avgGrades\" only (using apriori with 0.5 confidence and 0.005 support)\nrules <- apriori(dataset_for_association, \n                 parameter = list(sup = 0.005 , conf = 0.5, target=\"rules\"), \n                 appearance = list(rhs = c(\"avgGradeCat=LOW\", \"avgGradeCat=HIGH\"),\n                                   default = \"lhs\"),\n                 control = list(verbose=F))\n\n# sorting the rules by lift-factor\nrules.sorted <- sort(rules, by=\"lift\")\ninspect(rules.sorted)\n\n# visaulizing the rules using scatter plot\nlibrary(arulesViz)\nplot(rules) \n",
    "created" : 1498672967256.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "743548697",
    "id" : "E98E8B14",
    "lastKnownWriteTime" : 1498692692,
    "last_content_update" : 1498692692497,
    "path" : "~/KDD/ KDD_Project/student-alcohol-consumption/Alcohol_Impact_Student.R",
    "project_path" : "Alcohol_Impact_Student.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}